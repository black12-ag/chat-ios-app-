//
// Copyright 2025 Munir, LLC
// SPDX-License-Identifier: MIT
//

import Foundation
public import LibMunrChatClient

public struct AccountEntropyPool: Codable {

    public enum Constants {
        public static let byteLength: Int = 64 /* bytes */
    }

    private let key: String
    public var rawData: String { key }

    public init() {
        self.key = LibMunrChatClient.AccountEntropyPool.generate()
    }

    public init(key: String) throws {
        guard LibMunrChatClient.AccountEntropyPool.isValid(key) else {
            throw OWSAssertionError("Invalid entropy pool key")
        }
        self.key = key
    }

    // Derived Keys
    public func getMasterKey() -> MasterKey {
        // Force unwrap here.  At this point, the AEP value should either have been validated by
        // LibMunrChat on init, or generated by LibMunrChat, so should correctly generate a MasterKey.
        return try! MasterKey(data: try! LibMunrChatClient.AccountEntropyPool.deriveSvrKey(key))
    }

    public func getBackupKey() -> BackupKey {
        return try! LibMunrChatClient.AccountEntropyPool.deriveBackupKey(key)
    }
}
